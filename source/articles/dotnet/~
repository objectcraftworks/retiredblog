---
layout: page
title: ".NET Development"
comments: false 
sharing: true
footer: true
---

## ASP.NET/MVC
    
##### [Handling Exceptions in ASP.NET/MVC in MVC way](web/mvc4/exception_handling)
 The framework default exception handling is very basic, and does not scale well in some situation. There are two situations where you have to either put the logic in view which results in a duplicate code. 
> These situations are: 
    If you need a custom model for your Error view.
    If your Error view needs a master/layout 
		that depends on ViewData set by controllers.
 
   This is a 4 part series. 

* [Part 1](/dotnet/aspnet/mvc/exceptions/explained) how basic exception handling works. 
* Part 2, how to keep the view data set by controllers for Error Views. 
* Part 3, how to use a custom model.
* Part 4, how to set custom ViewData for ErrorViews. n Partdd

## NuGet
 
##### [Managing Packages using NuGet Dialog](dotnet/nuget/using-dialog)
  A tutorial on how to use the Nuget Dialog to add, remove, and update packages.
It also covers how to manage packages for a visual studio solution. 

##### [Managing Packages using the Package Manager Console](dotnet/nuget/using-console)   
  A tutorial on how to use Powershell Console to add, remove, and update packages.
It also covers how to manage packages solution wide. 
You will also see how to add or a update a particular version of a package using PM Console.


